---
import Button from '../ui/Button.astro';
import Image from '../ui/Image.astro';

export interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  media?: {
    image: string;
    alt: string;
    ratio?: '16:9' | '4:3' | '1:1';
  };
  ctas?: Array<{
    label: string;
    href: string;
    variant?: 'primary' | 'secondary' | 'outline';
  }>;
  backgroundType?: 'image' | 'gradient' | 'solid' | 'split';
  textAlign?: 'left' | 'center' | 'right';
  fullHeight?: boolean;
  overlay?: boolean;
  theme?: 'default' | 'gold' | 'emerald';
}

const {
  title,
  subtitle,
  description,
  media,
  ctas = [],
  backgroundType = 'gradient',
  textAlign = 'center',
  fullHeight = true,
  overlay = true,
  theme = 'default'
} = Astro.props;

const alignClasses: Record<string, string> = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right'
};

const themeConfig = {
  default: {
    gradient: 'bg-gradient-to-br from-blue-900 via-indigo-900 to-purple-900',
    accent: 'text-blue-200',
    decorative: ['bg-blue-400/10', 'bg-indigo-400/10'],
    button: {
      primary: 'bg-white text-blue-900 hover:bg-blue-50',
      outline: 'border-white text-white hover:bg-white hover:text-blue-900'
    }
  },
  gold: {
    gradient: 'bg-gradient-to-br from-slate-900 via-gray-900 to-amber-900',
    accent: 'text-amber-200',
    decorative: ['bg-amber-400/10', 'bg-yellow-400/10'],
    button: {
      primary: 'bg-amber-400 text-slate-900 hover:bg-amber-300',
      outline: 'border-amber-400 text-amber-400 hover:bg-amber-400 hover:text-slate-900'
    }
  },
  emerald: {
    gradient: 'bg-gradient-to-br from-slate-900 via-emerald-900 to-teal-900',
    accent: 'text-emerald-200',
    decorative: ['bg-emerald-400/10', 'bg-teal-400/10'],
    button: {
      primary: 'bg-emerald-400 text-slate-900 hover:bg-emerald-300',
      outline: 'border-emerald-400 text-emerald-400 hover:bg-emerald-400 hover:text-slate-900'
    }
  }
};

const currentTheme = themeConfig[theme as keyof typeof themeConfig];

const heroClasses = [
  'relative overflow-hidden',
  fullHeight ? 'min-h-screen' : 'min-h-[70vh]',
  'flex items-center justify-center'
].join(' ');
---

<section class={heroClasses}>
  <!-- Background -->
  {backgroundType === 'gradient' && (
    <div class={`absolute inset-0 ${currentTheme.gradient}`}></div>
  )}
  
  {backgroundType === 'image' && media?.image && (
    <div class="absolute inset-0">
      <Image
        src={media.image}
        alt={media.alt}
        class="w-full h-full object-cover"
        loading="eager"
      />
      {overlay && (
        <div class="absolute inset-0 bg-gradient-to-r from-gray-900/90 via-gray-800/85 to-gray-900/80"></div>
      )}
    </div>
  )}
  
  {backgroundType === 'split' && (
    <>
      <div class={`absolute inset-0 ${currentTheme.gradient}`}></div>
      {media?.image && (
        <div class="absolute right-0 top-0 w-1/2 h-full">
          <Image
            src={media.image}
            alt={media.alt}
            class="w-full h-full object-cover"
            loading="eager"
          />
          <div class="absolute inset-0 bg-black/20"></div>
        </div>
      )}
    </>
  )}
  
  <!-- Decorative Elements -->
  <div class="absolute inset-0 overflow-hidden">
    <div class={`absolute -top-40 -right-40 w-96 h-96 ${currentTheme.decorative[0]} rounded-full blur-3xl`}></div>
    <div class={`absolute -bottom-40 -left-40 w-96 h-96 ${currentTheme.decorative[1]} rounded-full blur-3xl`}></div>
    <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[800px] h-[800px] bg-white/5 rounded-full blur-3xl"></div>
  </div>

  <div class="relative container px-6 z-10">
    <div class="max-w-5xl mx-auto">
      <!-- Content -->
      <div class={`space-y-8 ${alignClasses[textAlign]}`}>
        {subtitle && (
          <div class="inline-flex items-center px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full border border-white/20">
            <span class={`text-sm font-medium tracking-wider uppercase ${currentTheme.accent}`}>
              {subtitle}
            </span>
          </div>
        )}
        
        <!-- Title (Note: This is NOT an H1 - the page template provides the H1) -->
        <div class="space-y-4">
          <p class="text-5xl md:text-6xl lg:text-7xl font-bold leading-tight text-balance text-white drop-shadow-lg">
            {title}
          </p>
        </div>
        
        {description && (
          <p class="text-xl md:text-2xl leading-relaxed text-balance max-w-4xl mx-auto text-gray-100 drop-shadow-md">
            {description}
          </p>
        )}
        
        <!-- CTAs */}
        {ctas.length > 0 && (
          <div class="flex flex-col sm:flex-row gap-6 justify-center items-center pt-8">
            {ctas.map((cta, index) => (
              <Button
                href={cta.href}
                variant={index === 0 ? 'primary' : 'outline'}
                size="lg"
                class={`
                  px-8 py-4 text-lg font-semibold transition-all duration-300 transform hover:scale-105 shadow-xl
                  ${index === 0 ? currentTheme.button.primary : currentTheme.button.outline}
                `}
              >
                {cta.label}
              </Button>
            ))}
          </div>
        )}
      </div>
    </div>
  </div>
  
  <!-- Scroll Indicator -->
  {fullHeight && (
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-10 animate-bounce">
      <div class="w-6 h-10 border-2 border-white/30 rounded-full flex justify-center">
        <div class="w-1 h-3 bg-white/50 rounded-full mt-2 animate-pulse"></div>
      </div>
    </div>
  )}
</section>
