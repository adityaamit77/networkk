---
export interface JourneyItem {
  title: string;
  description: string;
  year?: string;
  icon?: string;
  image?: string;
  milestone?: string;
}

export interface Props {
  heading?: string;
  description?: string;
  items: JourneyItem[];
  theme?: 'funnel' | 'timeline' | 'flow';
  backgroundType?: 'none' | 'light' | 'dark' | 'gradient';
}

const { 
  heading, 
  description, 
  items = [], 
  theme = 'funnel',
  backgroundType = 'gradient' 
} = Astro.props;

const backgroundClasses = {
  none: '',
  light: 'bg-gray-50',
  dark: 'bg-gray-900 text-white',
  gradient: 'bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50'
};
---

<section class={`py-16 lg:py-24 relative overflow-hidden ${backgroundClasses[backgroundType]}`}>
  <!-- Animated Background Elements -->
  <div class="absolute inset-0 pointer-events-none">
    <!-- Floating particles -->
    <div class="absolute top-20 left-10 w-2 h-2 bg-blue-400 rounded-full opacity-60 animate-float"></div>
    <div class="absolute top-40 right-20 w-3 h-3 bg-purple-400 rounded-full opacity-40 animate-float-delayed"></div>
    <div class="absolute bottom-40 left-20 w-1 h-1 bg-indigo-400 rounded-full opacity-80 animate-float"></div>
    <div class="absolute bottom-60 right-10 w-2 h-2 bg-pink-400 rounded-full opacity-50 animate-float-delayed"></div>
    
    <!-- Gradient orbs -->
    <div class="absolute top-1/4 left-1/3 w-32 h-32 bg-gradient-to-r from-blue-300 to-purple-300 rounded-full opacity-10 blur-xl animate-pulse"></div>
    <div class="absolute bottom-1/4 right-1/3 w-40 h-40 bg-gradient-to-r from-purple-300 to-pink-300 rounded-full opacity-10 blur-xl animate-pulse delay-1000"></div>
  </div>

  <div class="container mx-auto px-4 lg:px-8 relative z-10">
    <!-- Header -->
    {(heading || description) && (
      <div class="text-center mb-20">
        {heading && (
          <h2 class="text-4xl lg:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
            {heading}
          </h2>
        )}
        {description && (
          <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
            {description}
          </p>
        )}
      </div>
    )}

    <!-- Journey Funnel -->
    <div class="relative max-w-7xl mx-auto">
      <!-- SVG Funnel Background -->
      <div class="absolute inset-0 flex justify-center pointer-events-none">
        <svg class="w-full h-full max-w-4xl" viewBox="0 0 800 1000" preserveAspectRatio="xMidYMid meet">
          <defs>
            <linearGradient id="funnelGradient" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" style="stop-color:#3B82F6;stop-opacity:0.1" />
              <stop offset="25%" style="stop-color:#6366F1;stop-opacity:0.1" />
              <stop offset="75%" style="stop-color:#8B5CF6;stop-opacity:0.1" />
              <stop offset="100%" style="stop-color:#EC4899;stop-opacity:0.1" />
            </linearGradient>
            
            <linearGradient id="flowLine" x1="0%" y1="0%" x2="0%" y2="100%">
              <stop offset="0%" style="stop-color:#3B82F6;stop-opacity:0.8" />
              <stop offset="50%" style="stop-color:#8B5CF6;stop-opacity:0.6" />
              <stop offset="100%" style="stop-color:#EC4899;stop-opacity:0.8" />
            </linearGradient>

            <filter id="glow" x="-20%" y="-20%" width="140%" height="140%">
              <feGaussianBlur stdDeviation="4" result="coloredBlur"/>
              <feMerge> 
                <feMergeNode in="coloredBlur"/>
                <feMergeNode in="SourceGraphic"/>
              </feMerge>
            </filter>
          </defs>
          
          <!-- Funnel stages -->
          <path d="M50 100 L750 100 L650 250 L150 250 Z" fill="url(#funnelGradient)" opacity="0.3" class="animate-pulse"/>
          <path d="M150 250 L650 250 L550 400 L250 400 Z" fill="url(#funnelGradient)" opacity="0.4" class="animate-pulse" style="animation-delay: 0.5s"/>
          <path d="M250 400 L550 400 L475 550 L325 550 Z" fill="url(#funnelGradient)" opacity="0.5" class="animate-pulse" style="animation-delay: 1s"/>
          <path d="M325 550 L475 550 L450 700 L350 700 Z" fill="url(#funnelGradient)" opacity="0.6" class="animate-pulse" style="animation-delay: 1.5s"/>
          
          <!-- Central flow line -->
          <line x1="400" y1="100" x2="400" y2="700" stroke="url(#flowLine)" stroke-width="3" filter="url(#glow)" class="animate-pulse"/>
          
          <!-- Flow arrows -->
          {items.map((_, index) => (
            <path 
              d={`M390 ${180 + index * 150} L400 ${200 + index * 150} L410 ${180 + index * 150}`}
              stroke="url(#flowLine)" 
              stroke-width="2" 
              fill="none" 
              filter="url(#glow)"
              class="animate-pulse"
              style={`animation-delay: ${index * 0.3}s`}
            />
          ))}
        </svg>
      </div>

      <!-- Journey Items -->
      <div class="relative z-20 space-y-16 lg:space-y-20">
        {items.map((item, index) => (
          <div 
            class={`
              journey-item relative
              ${index % 2 === 0 ? 'lg:pl-0 lg:pr-24' : 'lg:pl-24 lg:pr-0 lg:text-right'}
              opacity-0 transform translate-y-8
            `}
            style={`animation-delay: ${index * 300}ms`}
          >
            <!-- Main Content Card -->
            <div class={`
              relative inline-block w-full lg:w-auto lg:max-w-md xl:max-w-lg
              ${index % 2 === 0 ? 'lg:ml-0' : 'lg:ml-auto'}
            `}>
              <div class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/20 p-8 lg:p-10 transform hover:scale-105 transition-all duration-500 hover:shadow-3xl group relative overflow-hidden">
                <!-- Year Badge with unique styling -->
                {item.year && (
                  <div class={`
                    absolute -top-4 ${index % 2 === 0 ? '-right-4' : '-left-4'}
                    bg-gradient-to-r from-blue-500 via-purple-600 to-pink-600 
                    text-white text-lg font-bold px-6 py-3 rounded-2xl shadow-lg
                    transform rotate-3 group-hover:rotate-6 transition-transform duration-300
                  `}>
                    {item.year}
                  </div>
                )}
                
                <!-- Background pattern -->
                <div class="absolute inset-0 opacity-5">
                  <div class="absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 rounded-3xl transform rotate-1"></div>
                </div>
                
                <!-- Content -->
                <div class="relative z-10">
                  <!-- Icon/Image with enhanced styling -->
                  <div class="mb-6">
                    {item.image ? (
                      <div class="w-20 h-20 rounded-2xl overflow-hidden border-4 border-white shadow-xl transform group-hover:rotate-6 transition-transform duration-300">
                        <img 
                          src={item.image} 
                          alt={item.title}
                          class="w-full h-full object-cover"
                        />
                      </div>
                    ) : item.icon && (
                      <div class="w-20 h-20 bg-gradient-to-br from-blue-500 via-purple-600 to-pink-600 rounded-2xl flex items-center justify-center text-3xl shadow-xl transform group-hover:rotate-12 group-hover:scale-110 transition-all duration-300">
                        {item.icon}
                      </div>
                    )}
                  </div>

                  <!-- Title with gradient -->
                  <h3 class="text-2xl lg:text-3xl font-bold mb-4 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent group-hover:from-purple-600 group-hover:to-pink-600 transition-all duration-300">
                    {item.title}
                  </h3>
                  
                  <!-- Description -->
                  <p class="text-gray-600 leading-relaxed text-lg mb-6">
                    {item.description}
                  </p>
                  
                  {item.milestone && (
                    <div class="inline-flex items-center text-sm font-medium text-blue-600 bg-blue-50 px-4 py-2 rounded-full border border-blue-200">
                      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4"></path>
                      </svg>
                      {item.milestone}
                    </div>
                  )}
                </div>

                <!-- Decorative elements -->
                <div class="absolute top-6 right-6 w-3 h-3 bg-blue-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity animate-ping"></div>
                <div class="absolute bottom-6 left-6 w-2 h-2 bg-purple-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity delay-100 animate-ping"></div>
              </div>
            </div>

            <!-- Connection Node -->
            <div class={`
              absolute top-1/2 transform -translate-y-1/2 
              ${index % 2 === 0 ? 'lg:right-8 xl:right-12' : 'lg:left-8 xl:left-12'}
              left-1/2 lg:left-auto -translate-x-1/2 lg:translate-x-0
            `}>
              <div class="relative">
                <div class="w-6 h-6 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full border-4 border-white shadow-lg z-20 relative">
                  <!-- Pulse rings -->
                  <div class="absolute inset-0 bg-blue-400 rounded-full animate-ping opacity-30"></div>
                  <div class="absolute inset-0 bg-purple-400 rounded-full animate-ping opacity-20" style="animation-delay: 0.5s"></div>
                </div>
              </div>
            </div>

            <!-- Step number -->
            <div class={`
              absolute top-4 
              ${index % 2 === 0 ? 'lg:right-0 xl:right-4' : 'lg:left-0 xl:left-4'}
              left-4 lg:left-auto
              text-6xl lg:text-7xl font-black text-gray-100 select-none pointer-events-none
            `}>
              {String(index + 1).padStart(2, '0')}
            </div>
          </div>
        ))}
      </div>

      <!-- Completion Badge -->
      <div class="mt-20 text-center relative z-20">
        <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-green-500 to-blue-600 rounded-full shadow-xl animate-bounce">
          <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M5 13l4 4L19 7"></path>
          </svg>
        </div>
        <p class="mt-6 text-xl font-semibold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
          The Journey Continues
        </p>
        <p class="text-gray-500 mt-2">Building the future of executive search</p>
      </div>
    </div>
  </div>
</section>

<style>
  .journey-item {
    animation: slideInUp 0.8s ease-out forwards;
  }

  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(3rem) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes float-delayed {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-15px);
    }
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-float-delayed {
    animation: float-delayed 3s ease-in-out infinite 1.5s;
  }

  /* Custom shadow */
  .shadow-3xl {
    box-shadow: 0 35px 60px -12px rgba(0, 0, 0, 0.25), 0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  /* Responsive adjustments */
  @media (max-width: 1023px) {
    .journey-item {
      text-align: center !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
    }
    
    .journey-item > div {
      margin-left: auto !important;
      margin-right: auto !important;
    }
  }
</style>

<script>
  // Enhanced intersection observer with stagger effect
  if (typeof window !== 'undefined') {
    const observerOptions = {
      threshold: 0.2,
      rootMargin: '0px 0px -100px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          let index = 0;
          if (entry.target.parentNode) {
            index = Array.from(entry.target.parentNode.children).indexOf(entry.target);
          }
          setTimeout(() => {
            (entry.target as HTMLElement).style.animation = `slideInUp 0.8s ease-out forwards`;
          }, index * 200);
        }
      });
    }, observerOptions);

    document.querySelectorAll('.journey-item').forEach((item) => {
      observer.observe(item);
    });
  }
</script>
