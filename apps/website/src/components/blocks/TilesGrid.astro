---
import Heading from '../ui/Heading.astro';
import Button from '../ui/Button.astro';
import Image from '../ui/Image.astro';
import { trackEvent } from '../../lib/analytics';

export interface Props {
  heading?: string;
  description?: string;
  items: Array<{
    title: string;
    description: string;
    icon?: string;
    image?: string;
    href?: string;
  }>;
  columns?: '2' | '3' | '4';
  backgroundType?: 'light' | 'dark' | 'gradient';
}

const {
  heading,
  description,
  items,
  columns = '3',
  backgroundType = 'light'
} = Astro.props;

const gridClasses: Record<string, string> = {
  '2': 'grid-cols-1 md:grid-cols-2',
  '3': 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  '4': 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4'
};

const bgClasses: Record<string, string> = {
  light: 'bg-white',
  dark: 'bg-gray-900',
  gradient: 'bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50'
};

const textClasses: Record<string, string> = {
  light: 'text-gray-900',
  dark: 'text-white',
  gradient: 'text-gray-900'
};

// Type-safe accessors
const bgClass = bgClasses[backgroundType as keyof typeof bgClasses] || bgClasses.light;
const textClass = textClasses[backgroundType as keyof typeof textClasses] || textClasses.light;
const gridClass = gridClasses[columns as keyof typeof gridClasses] || gridClasses['3'];
---

<section class={`section ${bgClass}`}>
  <div class="container">
    <!-- Header -->
    {(heading || description) && (
      <div class="text-center max-w-3xl mx-auto mb-16">
        {heading && (
          <Heading level={3} class={`mb-4 ${textClass}`}>
            {heading}
          </Heading>
        )}
        {description && (
          <p class={`text-xl ${backgroundType === 'dark' ? 'text-gray-300' : 'text-gray-600'}`}>
            {description}
          </p>
        )}
      </div>
    )}
    
    <!-- Grid -->
    <div class={`grid ${gridClass} gap-6`}>
      {items.map((item: any) => (
        <div class="bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-lg transition-all duration-300 hover:-translate-y-1 relative group flex flex-col">
          {item.image && (
            <div class="relative h-80 overflow-hidden">
              <Image
                src={item.image}
                alt={item.title}
                class="w-full h-full object-cover object-center transition-transform duration-300 group-hover:scale-105"
                width={400}
                height={320}
              />
            </div>
          )}
          <div class="p-6 flex-1 flex flex-col justify-between">
            <div class="text-center mb-4">
              <Heading level={5} class="mb-2 text-gray-900 text-xl font-bold">
                {item.title}
              </Heading>
              {item.description && (
                <div class="space-y-3">
                  {item.description.split('\n\n').map((paragraph: string, index: number) => {
                    if (index === 0) {
                      // First paragraph is the designation - style differently
                      return (
                        <p class="text-blue-600 font-semibold text-sm uppercase tracking-wide">
                          {paragraph}
                        </p>
                      );
                    } else {
                      // Subsequent paragraphs are regular description
                      return (
                        <p class="text-gray-600 text-sm leading-relaxed">
                          {paragraph}
                        </p>
                      );
                    }
                  })}
                </div>
              )}
            </div>
            {item.href && (
              <div class="mt-auto pt-4">
                <a href={item.href} class="inline-flex items-center justify-center w-full px-4 py-2 bg-blue-600 text-white font-medium text-sm rounded-lg hover:bg-blue-700 transition-colors group">
                  {item.href.includes('/careers') ? 'Apply Now' : 'View Profile'}
                  <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </a>
              </div>
            )}
          </div>
        </div>
      ))}
    </div>
  </div>
</section>
