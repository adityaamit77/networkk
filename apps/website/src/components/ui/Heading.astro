---
/**
 * Heading component.
 *
 * Tracks if an `<h1>` has already been rendered on the page. If another
 * `h1` is requested, the component logs a warning and renders an `h2`
 * instead to avoid multiple primary headings.
 */
export interface Props {
  level: 1 | 2 | 3 | 4 | 5 | 6;
  class?: string;
}

// Module-level flag to track if an H1 has been rendered.
let hasRenderedH1 = false;

let { level, class: className = '' } = Astro.props;

if (level === 1) {
  if (hasRenderedH1) {
    console.warn(
      'Heading.astro: Multiple <h1> elements detected. Rendering as <h2> instead.'
    );
    level = 2;
  } else {
    hasRenderedH1 = true;
  }
}

const baseClasses = 'font-semibold text-gray-900';
const levelClasses: Record<number, string> = {
  1: 'text-4xl md:text-5xl lg:text-6xl leading-tight',
  2: 'text-3xl md:text-4xl lg:text-5xl leading-tight',
  3: 'text-2xl md:text-3xl leading-tight',
  4: 'text-xl md:text-2xl leading-tight',
  5: 'text-lg md:text-xl leading-tight',
  6: 'text-base md:text-lg leading-tight'
};

const Tag = `h${level}` as any;
const classes = `${baseClasses} ${levelClasses[level]} ${className}`;
---

<Tag class={classes}>
  <slot />
</Tag>
