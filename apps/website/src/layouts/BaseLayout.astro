---
import SEO from '../components/seo/SEO.astro';
import JsonLd from '../components/seo/JsonLd.astro';
import Footer from '../components/ui/Footer.astro';
import '../styles/global.css';
import { getSiteConfig } from '../lib/content/adapter';

export interface Props {
  title: string;
  description: string;
  canonical?: string;
  noindex?: boolean;
  image?: string;
  keywords?: string[];
  jsonLd?: any;
  titleTemplate?: string;
  showHeader?: boolean;
  showFooter?: boolean;
  footerTheme?: 'default' | 'gold' | 'emerald';
}

const {
  title,
  description,
  canonical = Astro.url.href,
  noindex = false,
  image,
  keywords,
  jsonLd,
  titleTemplate,
  showHeader = true,
  showFooter = true,
  footerTheme = 'default'
} = Astro.props;

interface NavItem {
  label: string;
  href: string;
  cta?: boolean;
  children?: Array<{ label: string; href: string }>;
}

const siteConfig = await getSiteConfig();
const navItems: NavItem[] = siteConfig.navigation.header;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    
    <SEO
      title={title}
      description={description}
      canonical={canonical}
      noindex={noindex}
      image={image}
      keywords={keywords}
      titleTemplate={titleTemplate}
    />
    
    {jsonLd && <JsonLd data={jsonLd} />}
  </head>
  
  <body>
    <!-- Skip link for accessibility -->
    <a href="#main" class="skip-link">Skip to main content</a>
    
    {showHeader && (
      <header class="sticky top-0 z-50 bg-white/95 backdrop-blur-sm shadow-sm border-b border-gray-100">
        <nav class="container" aria-label="Main navigation">
          <div class="flex items-center justify-between py-4">
            <!-- Logo -->
            <a href="/" class="flex items-center space-x-3 group">
              <div class="relative">
                <img src="/logo.png" alt="Networkk Logo" class="h-12 w-auto transition-transform group-hover:scale-105" />
                <div class="absolute inset-0 bg-gradient-to-r from-blue-600/10 to-purple-600/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity -z-10"></div>
              </div>
            </a>
            
            <!-- Desktop Navigation -->
            <div class="hidden lg:flex items-center space-x-8">
              {navItems.map((item) => (
                item.children ? (
                  <div class="relative group">
                    <a href={item.href} class="flex items-center space-x-1 text-gray-700 hover:text-blue-600 font-medium transition-colors">
                      <span>{item.label}</span>
                      <svg class="w-4 h-4 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                      </svg>
                    </a>
                    <div class="absolute left-0 mt-2 hidden group-hover:block bg-white border border-gray-100 rounded-lg shadow-lg py-2 min-w-[12rem]">
                      {item.children.map((child) => (
                        <a href={child.href} class="block px-4 py-2 text-gray-700 hover:bg-gray-50 hover:text-blue-600 transition-colors">{child.label}</a>
                      ))}
                    </div>
                  </div>
                ) : item.cta ? (
                  <a href={item.href} class="bg-blue-600 text-white px-6 py-2.5 rounded-lg hover:bg-blue-700 transition-all duration-200 font-medium shadow-lg hover:shadow-xl hover:-translate-y-0.5">{item.label}</a>
                ) : (
                  <a href={item.href} class="text-gray-700 hover:text-blue-600 font-medium transition-colors relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-blue-600 after:transition-all hover:after:w-full">{item.label}</a>
                )
              ))}
            </div>
            
            <!-- Mobile Menu Button -->
            <button class="lg:hidden p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors" aria-label="Toggle mobile menu">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
          </div>
        </nav>
      </header>
    )}
    
    <main id="main">
      <slot />
    </main>
    
    {showFooter && (
      <Footer theme={footerTheme} />
    )}
  </body>
</html>
